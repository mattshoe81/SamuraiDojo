<div class="container" ng-controller="SenseiController as vm">
    <div class="spacer-25"></div>

    <h3 class="bold">Create your challenge:</h3>
    <ol>
        <li>Create a new folder in SamuraiDojo/Battles with the appropriate week number (just increment from the previous week)</li>
        <li>
            Create a new class in this folder for your challenge (clever names and puns are encouraged)
            <ul>
                <li>Copy the text in the <code>BattleTemplate.cs</code> file at the root of the Battles folder</li>
                <li>Fix the errors by filling in the appropriate areas</li>
                <li>Be sure to update the method signature(s)!</li>
            </ul>
        </li>
        <li>
            Create another class in the same Battle folder and paste the text from the <code>PlayerTemplate.cs</code> file
            <ul>
                <li>Just resolve the errors and update the method signature</li>
            </ul>
        </li>    
        <li>
            Copy all of the text of your finished battle class (the abstract class), navigate to the index.cshtml page, and paste it into the &#x3C;pre&#x3E;&#x3C;code&#x3E;&#x3C;/code&#x3E;&#x3C;/pre&#x3E; tags on the page (Replace the existing text completely)
            <ul>
                <li>You can html-encode this if you like, but the &lt; and &gt; symbols won't cause any trouble</li>
            </ul>
        </li>
    </ol>

    <h3 class="bold">Create a test suite:</h3>
    <ol>
        <li>Create a new folder at the root of the SamuraiDojo.Test project with the appropriate week number (same as your battle folder)</li>
        <li>
            Create a new unit test class paste in the text from the <code>TemplateBaseTest.cs</code> file.
            <ul>
                <li><code>Ctrl-F</code> will be your friend here (use Replace All)</li>
                <li>Replace <code>YOUR_BATTLE_CLASS</code> text with the name of your battle class</li>
                <li>Replace <code>Week#</code> with the proper week number</li>
                <li>Update the <code>AssertExpected</code> method with the proper parameter types</li>
                <li>Fill in your tests!</li>
            </ul>
        </li>
        <li>
            Write as many unit tests as you deem fit, keeping in mind that players will get 1 point for every test they pass.
            <ul>
                <li>The <code>DojoTest&lt;T&gt;</code> class defines a <code>GetInstance()</code> method which you must use in your tests to get an implementation of the algorithm you're testing.</li>
                <li>Do your best to come up with tests that will be able to poke and prod the edge cases and potential pitfalls of implementations.</li>
                <li>I recommend using <a href="https://www.linqpad.net/">LINQPad</a> to generate some of the tests with large data sets. (i.e. write some quick code to print out some text you can paste into the actual test)</li>
            </ul>
        </li>
        <li>
            Create a new class in your test folder and name it after yourself, and paste in the text of the <code>TemplateTest.cs</code> file.
            <ul>
                <li>Find/Replace 'Week#' with the proper week number</li>
                <li>Other errors should be self-explanatory</li>
            </ul>
        </li>
    </ol>

    <h3 class="bold">Set up Benchmarking:</h3>
    <ol>
        <li>Create a new <code>class</code> in the SamuraiDojo.Benchmarking/Benchmarks folder with the appropriate week number</li>
        <li>
            Create a new class in the SamuraiDojo.Benchmarking/Benchmarks folder with the appropriate week number
            <ul>
                <li>Paste in the text of the <code>BenchmarkTemplate.cs</code> file</li>
                <li>Make the necessary corections</li>
            </ul>
        </li>
        <li>
            After you have merged everyone's solution into the master branch, do the exact same thing for each person who submitted a solution, EXCEPT:
            <ul>
                <li>Only decorate their methods with the <code>[Benchmark]</code> attribute.</li>
                <li>Pass in an instance of their test implementation to the base.Run method</li>
            </ul>
        </li>
        <li>
            Open the <code>BenchmarkEngine</code> class in the <code>SamuraiDojo.Benchmarking</code> project
            <ul>
                <li>You need to map the benchmarking class you created for this week to your challenge you set up in the <span class="bold italic">Create your challenge</span> section</li>
                <li>There will be multiple others for you to use as an example, but the Key has to be your battle class, and the value has to be your benchmarking class</li>
            </ul>
        </li>
    </ol>

</div>
